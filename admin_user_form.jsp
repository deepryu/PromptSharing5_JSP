<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ page import="com.example.model.User" %>
<%
    // ÏÑ∏ÏÖò Í≤ÄÏ¶ù
    if (session.getAttribute("username") == null) {
        response.sendRedirect("login.jsp");
        return;
    }
    
    // Í¥ÄÎ¶¨Ïûê Í∂åÌïú ÌôïÏù∏
    String role = (String) session.getAttribute("role");
    if (!"ADMIN".equals(role)) {
        response.sendError(HttpServletResponse.SC_FORBIDDEN, "Í¥ÄÎ¶¨Ïûê Í∂åÌïúÏù¥ ÌïÑÏöîÌï©ÎãàÎã§.");
        return;
    }
    
    // üìù ÏàòÏ†ï Î™®ÎìúÏù∏ÏßÄ Ïã†Í∑ú Î™®ÎìúÏù∏ÏßÄ ÌôïÏù∏
    User user = (User) request.getAttribute("user");
    boolean isEditMode = (user != null);
    String pageTitle = isEditMode ? "ÏÇ¨Ïö©Ïûê Ï†ïÎ≥¥ ÏàòÏ†ï" : "ÏÉà ÏÇ¨Ïö©Ïûê Ï∂îÍ∞Ä";
    String formAction = isEditMode ? "admin/user/edit" : "admin/user/add";
    
    System.out.println("üìù [NEW admin_user_form.jsp] Î™®Îìú: " + (isEditMode ? "ÏàòÏ†ï" : "Ïã†Í∑ú"));
    if (isEditMode && user != null) {
        System.out.println("üìù ÏÇ¨Ïö©Ïûê Ï†ïÎ≥¥: ID=" + user.getId() + ", username=" + user.getUsername() + ", role=" + user.getRole());
    }
%>
<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate">
    <meta http-equiv="Pragma" content="no-cache">
    <meta http-equiv="Expires" content="0">
    <title><%= pageTitle %> - Í¥ÄÎ¶¨Ïûê ÎåÄÏãúÎ≥¥Îìú</title>
    <base href="${pageContext.request.contextPath}/">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            background-color: #f0f0f0;
            color: #24292f;
            line-height: 1.6;
        }
        
        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .top-bar {
            background-color: #0078d4;
            color: white;
            padding: 15px 20px;
            border-radius: 8px 8px 0 0;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .top-bar h1 {
            font-size: 24px;
            font-weight: 600;
        }
        
        .back-link {
            color: white;
            text-decoration: none;
            padding: 8px 16px;
            border: 1px solid rgba(255, 255, 255, 0.3);
            border-radius: 6px;
            transition: background-color 0.2s;
        }
        
        .back-link:hover {
            background-color: rgba(255, 255, 255, 0.1);
        }
        
        .main-dashboard {
            background-color: white;
            border-radius: 0 0 8px 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }
        
        .dashboard-header {
            background-color: #f6f8fa;
            padding: 20px;
            border-bottom: 1px solid #d0d7de;
        }
        
        .dashboard-header h2 {
            font-size: 20px;
            font-weight: 600;
            color: #24292f;
        }
        
        .dashboard-content {
            padding: 30px;
        }
        
        .form-row {
            display: flex;
            gap: 20px;
            margin-bottom: 20px;
        }
        
        .form-group {
            flex: 1;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: #24292f;
        }
        
        .form-group input,
        .form-group select {
            width: 100%;
            padding: 10px 12px;
            border: 1px solid #d0d7de;
            border-radius: 6px;
            font-size: 14px;
            font-family: inherit;
            background-color: #ffffff;
            transition: border-color 0.2s;
        }
        
        .form-group input:focus,
        .form-group select:focus {
            outline: none;
            border-color: #0078d4;
            box-shadow: 0 0 0 3px rgba(0, 120, 212, 0.1);
        }
        
        .form-group input[readonly] {
            background-color: #f6f8fa;
            color: #656d76;
        }
        
        .form-group small {
            display: block;
            margin-top: 5px;
            color: #656d76;
            font-size: 12px;
        }
        
        .form-actions {
            margin-top: 30px;
            display: flex;
            gap: 12px;
        }
        
        .btn {
            padding: 10px 20px;
            border: none;
            border-radius: 6px;
            font-size: 14px;
            font-weight: 500;
            cursor: pointer;
            text-decoration: none;
            display: inline-block;
            text-align: center;
            transition: all 0.2s;
        }
        
        .btn-primary {
            background-color: #1f883d;
            color: white;
        }
        
        .btn-primary:hover {
            background-color: #1a7733;
        }
        
        .btn-secondary {
            background-color: white;
            color: #24292f;
            border: 1px solid #d0d7de;
        }
        
        .btn-secondary:hover {
            background-color: #f3f4f6;
        }
        
        .error {
            background-color: #fef2f2;
            border: 1px solid #fecaca;
            color: #dc2626;
            padding: 12px;
            border-radius: 6px;
            margin-bottom: 20px;
        }
        
        .success {
            background-color: #f0fdf4;
            border: 1px solid #bbf7d0;
            color: #16a34a;
            padding: 12px;
            border-radius: 6px;
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="top-bar">
            <h1><%= isEditMode ? "üìù ÏÇ¨Ïö©Ïûê Ï†ïÎ≥¥ ÏàòÏ†ï" : "‚ûï ÏÉà ÏÇ¨Ïö©Ïûê Ï∂îÍ∞Ä" %></h1>
            <a href="admin/dashboard" class="back-link">‚Üê ÎåÄÏãúÎ≥¥ÎìúÎ°ú ÎèåÏïÑÍ∞ÄÍ∏∞</a>
        </div>
        
        <div class="main-dashboard">
            <div class="dashboard-header">
                <h2><%= isEditMode ? "ÏÇ¨Ïö©Ïûê Ï†ïÎ≥¥ ÏàòÏ†ï" : "ÏÇ¨Ïö©Ïûê Ï†ïÎ≥¥ ÏûÖÎ†•" %></h2>
            </div>
            
            <div class="dashboard-content">
                <% if (request.getAttribute("error") != null) { %>
                    <div class="error">
                        <strong>Ïò§Î•ò:</strong> <%= request.getAttribute("error") %>
                    </div>
                <% } %>
                
                <% if (request.getAttribute("success") != null) { %>
                    <div class="success">
                        <strong>ÏÑ±Í≥µ:</strong> <%= request.getAttribute("success") %>
                    </div>
                <% } %>
                
                <form action="<%= formAction %>" method="post" autocomplete="off" data-lpignore="true">
                    <% if (isEditMode) { %>
                        <input type="hidden" name="id" value="<%= user.getId() %>">
                    <% } %>
                    
                    <div class="form-row">
                        <div class="form-group">
                            <label for="username">ÏÇ¨Ïö©ÏûêÎ™Ö *</label>
                            <input type="text" 
                                   id="username" 
                                   name="username" 
                                   value="<%= isEditMode && user.getUsername() != null ? user.getUsername() : "" %>" 
                                   required 
                                   <%= isEditMode ? "readonly" : "" %>
                                   autocomplete="<%= isEditMode ? "username" : "new-username" %>"
                                   data-lpignore="true"
                                   data-form-type="other"
                                   spellcheck="false">
                            <small>ÏòÅÎ¨∏, Ïà´Ïûê, Ïñ∏ÎçîÏä§ÏΩîÏñ¥(_)Îßå ÏÇ¨Ïö© Í∞ÄÎä•</small>
                        </div>
                        
                        <div class="form-group">
                            <label for="email">Ïù¥Î©îÏùº</label>
                            <input type="email" 
                                   id="email" 
                                   name="email" 
                                   value="<%= isEditMode && user.getEmail() != null ? user.getEmail() : "" %>"
                                   autocomplete="<%= isEditMode ? "email" : "new-email" %>"
                                   data-lpignore="true"
                                   data-form-type="other"
                                   spellcheck="false">
                            <small>ÏÑ†ÌÉùÏÇ¨Ìï≠</small>
                        </div>
                    </div>
                    
                    <div class="form-row">
                        <div class="form-group">
                            <label for="password">ÎπÑÎ∞ÄÎ≤àÌò∏ <%= isEditMode ? "" : "*" %></label>
                            <input type="password" 
                                   id="password" 
                                   name="password" 
                                   <%= isEditMode ? "" : "required" %>
                                   autocomplete="<%= isEditMode ? "current-password" : "new-password" %>"
                                   data-lpignore="true"
                                   data-form-type="other">
                            <small><%= isEditMode ? "Î≥ÄÍ≤ΩÌïòÎ†§Î©¥ ÏûÖÎ†•ÌïòÏÑ∏Ïöî (ÏÑ†ÌÉùÏÇ¨Ìï≠)" : "ÏµúÏÜå 6Ïûê Ïù¥ÏÉÅ" %></small>
                        </div>
                        
                        <div class="form-group">
                            <label for="confirmPassword">ÎπÑÎ∞ÄÎ≤àÌò∏ ÌôïÏù∏ <%= isEditMode ? "" : "*" %></label>
                            <input type="password" 
                                   id="confirmPassword" 
                                   name="confirmPassword" 
                                   <%= isEditMode ? "" : "required" %>
                                   autocomplete="<%= isEditMode ? "current-password" : "new-password" %>"
                                   data-lpignore="true"
                                   data-form-type="other">
                            <small><%= isEditMode ? "ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÏûÖÎ†•ÌñàÎã§Î©¥ ÌôïÏù∏ ÏûÖÎ†•" : "ÏúÑÏôÄ ÎèôÏùºÌïòÍ≤å ÏûÖÎ†•" %></small>
                        </div>
                    </div>
                    
                    <div class="form-row">
                        <div class="form-group">
                            <label for="fullName">Ï†ÑÏ≤¥ Ïù¥Î¶Ñ</label>
                            <input type="text" 
                                   id="fullName" 
                                   name="fullName" 
                                   value="<%= isEditMode && user.getFullName() != null ? user.getFullName() : "" %>"
                                   autocomplete="<%= isEditMode ? "name" : "new-name" %>"
                                   data-lpignore="true"
                                   data-form-type="other"
                                   spellcheck="false">
                            <small>ÌëúÏãúÎê† Ïù¥Î¶Ñ</small>
                        </div>
                        
                        <div class="form-group">
                            <label for="role">Ïó≠Ìï† *</label>
                            <select id="role" name="role" required autocomplete="off">
                                <option value="">Ïó≠Ìï† ÏÑ†ÌÉù</option>
                                <option value="INTERVIEWER" <%= isEditMode && user.getRole() != null && "INTERVIEWER".equals(user.getRole()) ? "selected" : "" %>>Ïù∏ÌÑ∞Î∑∞Ïñ¥</option>
                                <option value="ADMIN" <%= isEditMode && user.getRole() != null && "ADMIN".equals(user.getRole()) ? "selected" : "" %>>Í¥ÄÎ¶¨Ïûê</option>
                            </select>
                            <small>ÏÇ¨Ïö©ÏûêÏùò ÏãúÏä§ÌÖú Í∂åÌïú Î†àÎ≤®</small>
                        </div>
                    </div>
                    
                    <div class="form-actions">
                        <button type="submit" class="btn btn-primary">
                            <%= isEditMode ? "ÏàòÏ†ï ÏôÑÎ£å" : "ÏÇ¨Ïö©Ïûê Ï∂îÍ∞Ä" %>
                        </button>
                        <a href="admin/users" class="btn btn-secondary">Ï∑®ÏÜå</a>
                    </div>
                </form>
            </div>
        </div>
    </div>
    
    <script>
        console.log('üìù [NEW] admin_user_form.jsp Î°úÎìúÎê®');
        console.log('üìù ÏàòÏ†ï Î™®Îìú:', <%= isEditMode %>);
        
        // üîÑ Ïã†Í∑ú Î™®ÎìúÏóêÏÑúÎßå Ìèº ÌïÑÎìú Ï¥àÍ∏∞Ìôî (Î∏åÎùºÏö∞Ï†Ä ÏûêÎèôÏôÑÏÑ± Î∞©ÏßÄ)
        function clearFormFieldsForNewMode() {
            const isEditMode = <%= isEditMode %>;
            if (isEditMode) {
                console.log('üìù ÏàòÏ†ï Î™®Îìú: Ìèº Ï¥àÍ∏∞Ìôî Í±¥ÎÑàÎõ∞Í∏∞');
                return;
            }
            
            console.log('üîÑ Ïã†Í∑ú Î™®Îìú: Ìèº ÌïÑÎìú ÏûêÎèôÏôÑÏÑ± Î∞©ÏßÄ ÏãúÏûë');
            
            // Ïã†Í∑ú Î™®ÎìúÏóêÏÑúÎßå ÌïÑÎìú Ï¥àÍ∏∞Ìôî
            const fieldsToReset = ['username', 'email', 'password', 'confirmPassword', 'fullName'];
            
            fieldsToReset.forEach(fieldId => {
                const field = document.getElementById(fieldId);
                if (field && field.value !== '') {
                    console.log(`üîÑ ${fieldId} ÌïÑÎìú ÏûêÎèôÏôÑÏÑ± Í∞êÏßÄ, Ï¥àÍ∏∞Ìôî Ï§ë...`);
                    field.value = '';
                    field.defaultValue = '';
                }
            });
            
            // Ïã†Í∑ú Î™®ÎìúÏóêÏÑú Í∏∞Î≥∏ Ïó≠Ìï† ÏÑ§Ï†ï
            const roleSelect = document.getElementById('role');
            if (roleSelect) {
                if (roleSelect.value === '' || roleSelect.selectedIndex === 0) {
                    roleSelect.value = 'INTERVIEWER'; // Í∏∞Î≥∏Í∞í: Ïù∏ÌÑ∞Î∑∞Ïñ¥
                    console.log('‚úÖ Í∏∞Î≥∏ Ïó≠Ìï† ÏÑ§Ï†ï: Ïù∏ÌÑ∞Î∑∞Ïñ¥');
                }
            }
            
            console.log('‚úÖ Ïã†Í∑ú Î™®Îìú: ÏûêÎèôÏôÑÏÑ± Î∞©ÏßÄ ÏôÑÎ£å');
        }
        
        // ÎπÑÎ∞ÄÎ≤àÌò∏ ÌôïÏù∏ Í≤ÄÏ¶ù
        function setupPasswordValidation() {
            const passwordField = document.getElementById('password');
            const confirmPasswordField = document.getElementById('confirmPassword');
            const isEditMode = <%= isEditMode %>;
            
            function validatePasswords() {
                if (!passwordField || !confirmPasswordField) return;
                
                const password = passwordField.value;
                const confirmPassword = confirmPasswordField.value;
                
                // ÏàòÏ†ï Î™®ÎìúÏóêÏÑú Îëò Îã§ ÎπÑÏñ¥ÏûàÏúºÎ©¥ Í≤ÄÏ¶ù Ìå®Ïä§
                if (isEditMode && password === '' && confirmPassword === '') {
                    confirmPasswordField.setCustomValidity('');
                    return;
                }
                
                // ÎπÑÎ∞ÄÎ≤àÌò∏Í∞Ä ÏûÖÎ†•ÎêòÏóàÎã§Î©¥ ÌôïÏù∏ ÌïÑÎìúÏôÄ ÏùºÏπòÌï¥Ïïº Ìï®
                if (password !== confirmPassword) {
                    confirmPasswordField.setCustomValidity('ÎπÑÎ∞ÄÎ≤àÌò∏Í∞Ä ÏùºÏπòÌïòÏßÄ ÏïäÏäµÎãàÎã§.');
                } else {
                    confirmPasswordField.setCustomValidity('');
                }
            }
            
            if (passwordField && confirmPasswordField) {
                passwordField.addEventListener('input', validatePasswords);
                confirmPasswordField.addEventListener('input', validatePasswords);
            }
        }
        
        // ÌéòÏù¥ÏßÄ Î°úÎìú Ïãú Ïã§Ìñâ
        document.addEventListener('DOMContentLoaded', function() {
            console.log('üìÑ DOMContentLoaded Ïã§Ìñâ');
            
            // ÎπÑÎ∞ÄÎ≤àÌò∏ Í≤ÄÏ¶ù ÏÑ§Ï†ï
            setupPasswordValidation();
            
            // Ïã†Í∑ú Î™®ÎìúÏóêÏÑúÎßå ÏûêÎèôÏôÑÏÑ± Î∞©ÏßÄ
            setTimeout(clearFormFieldsForNewMode, 100);
            
            console.log('‚úÖ [NEW] Ìèº Ï¥àÍ∏∞Ìôî ÏôÑÎ£å');
        });
        
        // ÌéòÏù¥ÏßÄ ÌëúÏãú ÏãúÏóêÎèÑ Ïã§Ìñâ (Îí§Î°úÍ∞ÄÍ∏∞ Îì±)
        window.addEventListener('pageshow', function(event) {
            console.log('üìÑ pageshow Ïù¥Î≤§Ìä∏');
            setTimeout(clearFormFieldsForNewMode, 50);
        });
        
        // ÏúàÎèÑÏö∞ Ìè¨Ïª§Ïä§ ÏãúÏóêÎèÑ Ïã§Ìñâ
        window.addEventListener('focus', function() {
            console.log('üìÑ focus Ïù¥Î≤§Ìä∏');
            setTimeout(clearFormFieldsForNewMode, 50);
        });
    </script>
</body>
</html> 